
package compare.wordsimilarity;
import java.io.*;
import java.util.*;

public class SimProcess {

	/**
	 * @param args
	 */
	public static void main(String[] args)throws Exception {
		// TODO Auto-generated method stub
		
		File file = new File("D:/workspace/segment/data/worddata/worddict.txt");
		String encoding = "UTF8";
		ArrayList wordList = new ArrayList();
		InputStreamReader read = new InputStreamReader(new FileInputStream(file), encoding);
		BufferedReader bufferedReader = new BufferedReader(read);
		String lineTxt = null;
		HashMap<String, Double> wordhashMap = new HashMap<String, Double>();
		while ((lineTxt = bufferedReader.readLine()) != null) {
			wordList.add(lineTxt);
		} //

		for (int i = 0; i < wordList.size(); i++) {
			wordhashMap = new HashMap<String, Double>();
			String word1 = (String) wordList.get(i);
			for (int j = 0; j < wordList.size(); j++) {
				if (j != i) {
					String word2 = (String) wordList.get(j);
					double sim = WordSimilarity.simWord(word1, word2);
					if (sim > 0.1) {
						wordhashMap.put(word2, sim);
					}
				}
			}

			// д��

			Iterator<String> iterator = wordhashMap.keySet().iterator();
			
			if (iterator.hasNext()){
			
			File file1 = new File("D:/workspace/segment/data/worddata/simresult/" + word1 + ".txt");

			// if file doesnt exists, then create it
			if (!file1.exists()) {
				file1.createNewFile();
			}

			FileWriter fw = new FileWriter(file1);
			PrintWriter bw = new PrintWriter(fw);
			
			// String value = "";
			while (iterator.hasNext()) {
				// value = hashmap.get(iterator.next());
				String key = (String) iterator.next();
				double value = (Double) wordhashMap.get(key);
				value = ((int)(value*100))*1.0/100;
				String valueString = String.valueOf(value);
				bw.println(key + ":" + valueString);
			}
			// for (int k=0; k<wordhashMap.size(); k++){
			// bw.write(wordhashMap);
			// }
			bw.flush();
			bw.close();
			}

		}
		
		System.out.println("finish..");
	}

}
